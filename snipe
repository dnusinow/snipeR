#!/usr/bin/Rscript --vanilla

suppressPackageStartupMessages( library(snipeR) )
suppressPackageStartupMessages( library(optparse) )

registerDoMC()

option.list <- list(make_option(c("-t", "--treatment"), action = "store",
                                type = "character",
                                help = "File containing proteomics data for treatment sample."),
                    make_option(c("-c", "--control"), action = "store",
                                type = "character",
                                help = "File containing proteomics data for control sample."),
                    make_option(c("-s", "--species"), action = "store",
                                type = "integer", default = 10090,
                                help = "STRING Species ID [default %default (mouse)]"),
                    make_option(c("-j", "--jobs"), action = "store",
                                type = "integer", default = 100,
                                help = "Number of jobs to fork off [default %default]"),
                    make_option(c("-p", "--perms"), action = "store",
                                type = "integer", default = 100,
                                help = "Number of permutations per job [default %default]"),
                    make_option(c("-m", "--mapdir"), action = "store",
                                type = "character", default = "snipe_maps",
                                help = "Path to directory where ID mapping files will be found or stored [default %default]"),
                    make_option(c("-d", "--download"), action = "store",
                                type = "character", default = "a",
                                help = "Download necessary files? y/n/a. [default %default (ask)]"),
                    make_option(c("-o", "--output"), action = "store",
                                type = "character", default = "",
                                help = "Path to write the output file. [default writes to STDOUT]"))

opt <- parse_args(OptionParser(option_list = option.list))
## print(opt)
if ( length(grep("^ye?s?", opt$download, ignore.case = TRUE)) != 0 ) {
  sinkvar <- download.missing.maps(opt$mapdir, permission.to.dl = TRUE)
} else if ( length(grep("^no?", opt$download, ignore.case = TRUE)) != 0 ) {
  ## Do nothing, the user doesn't want a download
} else if ( length(grep("^as?k?", opt$download, ignore.case = TRUE)) != 0) {
  sinkvar <- download.missing.maps(opt$mapdir)
} else {
  stop("Could not interpret the -d/--download flag value. Please supply either y, n, or a\n")
}
                    
out <- snipe(treatment = opt$treatment, control = opt$control,
             species = opt$species,
             njobs = opt$jobs, nperms.per.job = opt$perms,
             dbpath = opt$mapdir)
             
outfile <- stdout()
if ( opt$output != "" ) {
  outfile <- opt$output
}
write.table(out, outfile, col.names = TRUE, row.names = FALSE, sep = "\t")
